# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest
variables:
  RESOURCE_GROUP: 'Python'  # Replace with your resource group
  AKS_CLUSTER_NAME: 'akscluster'   # Replace with your AKS cluster name
  AKS_LOCATION: 'westeurope'             # Replace with your desired location
  ACR_NAME: 'dumbo'                  # Replace with your Azure Container Registry name


steps:
- task: Docker@2
  inputs:
    containerRegistry: 'dumbo'
    command: 'build'
    Dockerfile: '**/Dockerfile'
- task: Docker@2
  inputs:
    containerRegistry: 'dumbo'
    command: 'push'

- task: AzureCLI@2
  inputs:
    azureSubscription: 'Akash'  # Replace with your service connection name
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      # Create Resource Group if it doesn't exist
      #az group create --name $RESOURCE_GROUP --location $AKS_LOCATION
      
      # Create AKS Cluster
      az aks create \
        --resource-group $RESOURCE_GROUP \
        --name $AKS_CLUSTER_NAME \
        --node-count 3 \
        --enable-addons monitoring \
        --generate-ssh-keys \
        --attach-acr $ACR_NAME \
        --location eastus
      
      # Get AKS credentials
      az aks get-credentials --resource-group $RESOURCE_GROUP --name $AKS_CLUSTER_NAME
      
      # Verify the connection to the cluster
      kubectl get nodes


- task: Kubernetes@1
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: 'Akash'
    azureResourceGroup: 'Python'
    kubernetesCluster: 'akscluster'
    command: 'apply'
    arguments: 'kubectl apply -f deployment.yaml'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'


